/*
*
* PHYLO Distribution Build v3.1.0
* http://phylo.cs.mcgill.ca
*
* Copyright 2013 McGill university, Alfred Kam, Jerome Waldispuhl and other contributors
* Under McGill Human-Computing Developer Licence
* https://github.com/McGill-CSB/PHYLO/blob/master/McGill-LICENCE.txt
*
*/function FoldCalculator(a){this.SHARP=4,this.THRESHOLD=10,this.p={A:{A:0,C:0,G:0,U:2,".":0},C:{A:0,C:0,G:4,U:0,".":0},G:{A:0,C:4,G:0,U:1,".":0},U:{A:2,C:0,G:1,U:0,".":0},".":{A:0,C:0,G:0,U:0,".":0}},this.po={A:{A:0,C:0,G:0,U:1,".":0},C:{A:0,C:0,G:1,U:0,".":0},G:{A:0,C:1,G:0,U:0,".":0},U:{A:1,C:0,G:0,U:0,".":0},".":{A:0,C:0,G:0,U:0,".":0}},this.diffMatrix={"<":{"<":[0,0,0],">":[1,0,0],".":[0,0,1]},">":{"<":[1,0,0],">":[0,0,0],".":[0,0,1]},".":{"<":[0,1,0],">":[0,1,0],".":[0,0,0]}},this.original=a.fold,this.sequences=a.sequences}FoldCalculator.prototype.diffOriginal=function(a){for(var b,c=0,d=0,e=0,f=0;f<a.length;f++)b=this.diffMatrix[this.original.charAt(f)][a.charAt(f)],c+=b[0],d+=b[1],e+=b[2];return{difference:c,extra:d,missing:e}},FoldCalculator.prototype.score=function(){return this.foldAll(this.sequences,this.p)},FoldCalculator.prototype.setOriginal=function(a){this.original=a},FoldCalculator.prototype.setAll=function(a){this.original=a.fold,this.sequences=a.sequences},FoldCalculator.prototype.setSeqs=function(a){this.sequences=a},FoldCalculator.prototype.getOriginal=function(){return this.original},FoldCalculator.sums=function(a,b,c,d){for(var e=0,f=0;f<c.length;f++)e+=d[c[f].charAt(a)][c[f].charAt(b)];return e},FoldCalculator.prototype.backtrack=function(a,b,c,d,e){var f;f=d[b*c+a],0-this.THRESHOLD<=f&&-1>=f?(console.log("go neg"),e[a]=".",e[b]=".",this.backtrack(a+1,b-1,c,d,e)):0>f?(e[a]="<",e[b]=">",this.backtrack(a+1,b-1,c,d,e)):f>=a&&b>=f+1&&(this.backtrack(a,f,c,d,e),this.backtrack(f+1,b,c,d,e))},FoldCalculator.prototype.foldAll=function(a,b){for(var c={},d=a[0].length,e=new Array(d*d),f=0;d>f;f++)e[f*d+f]=0;for(var f=1;d>f;f++)e[f*d+f-1]=0;for(var f=d-1;f>=0;f--)for(var g=f;d>g;g++)if(g-f<=this.SHARP)e[g*d+f]=-1,e[f*d+g]=0;else{var h=FoldCalculator.sums(f,g,a,b),i=e[(f+1)*d+g-1]+h;e[g*d+f]=-1-h;for(var j=f;g>j;j++)h=e[f*d+j]+e[(j+1)*d+g],h>i&&(i=h,e[g*d+f]=j);e[f*d+g]=i}c.score=e[d-1];var k=new Array;this.backtrack(0,d-1,d,e,k);for(var l="",f=0;f<k.length;f++)l+=null!=k[f]?k[f]:".";return c.fold=l,c};